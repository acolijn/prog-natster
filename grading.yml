grades:
    module1:
        type: float
        subgrades:
            scope: integer
            stijl: integer
            extra: integer
        automatic:
            scope: check_score.floor
        calculation: ((3 * scope / 12.0 * 5 + stijl) / 20.0 * 8 + (extra / 10.0) + 1).round(1)
    module2:
        type: float
        subgrades:
            scope: integer
            stijl: integer
            extra: integer
        automatic:
            scope: check_score.floor
        calculation: ((3 * scope / 15.0 * 5 + stijl) / 20.0 * 8 + (extra / 10.0) + 1).round(1)
    module3:
        type: float
        subgrades:
            scope: integer
            stijl: integer
            extra: integer
        automatic:
            scope: check_score.floor
        calculation: ((3 * scope / 18.0 * 5 + stijl) / 20.0 * 8 + (extra / 10.0) + 1).round(1)
    module4:
        type: float
        subgrades:
            scope: integer
            stijl: integer
            extra: integer
        # automatic:
        #     scope: check_score.floor
        calculation: ((3 * scope / 14.0 * 5 + stijl) / 20.0 * 8 + (extra / 10.0) + 1).round(1)
    tent:
        type: float
        subgrades:
            points: float
        calculation: (points.to_f / 10.0 * 9.0 + 1.0).round(1)
    hert:
        type: float
        subgrades:
            points: float
        calculation: (points.to_f / 10.0 * 9.0 + 1.0).round(1)

calculation:
    resit:
        hert: 50
        psets: 50
    normal:
        tent: 50
        psets: 50

psets:
    submits:
        module1: 1
        module2: 1
        module3: 1
        module4: 1

tent:
    minimum: 5.5
    required: true
    submits:
        tent: 1

hert:
    minimum: 5.5
    required: true
    submits:
        hert: 1
